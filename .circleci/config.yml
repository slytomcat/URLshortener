version: 2.1
jobs:
  build:
    docker:
      - image: circleci/golang:1.13.4
    steps:
      - checkout
      - run:
          name: building
          command: |
            export CGO_ENABLED=0
            go build .
      - run:
          name: Store version
          command: git describe --tags | sed "s/^\(v\.[0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/" > VERSION
      - persist_to_workspace:
          root: .
          paths:
            - ./URLshortener
            - ./VERSION

  test:
    docker:
      - image: circleci/golang:1.13.4
    steps:
      - checkout
      - run:
          name: Prepare reports
          command: |
            go get -u github.com/jstemmer/go-junit-report;
            mkdir results;
      - setup_remote_docker
      - run:
          name: Prepare mysql
          command: |
            ./mysqlsetup.sh
            export URLSHORTENER_DSN="shortener:test@tcp(localhost:3306)/shortener_DB"
      - run:
          name: Tests
          command: go test -v -race -coverprofile cover.out 2>&1 | tee /dev/tty | go-junit-report > results/results.xml
      - run:
          name: Report coverage to deepsource.io
          command: |
            curl https://deepsource.io/cli | sh
            ./bin/deepsource report --analyzer test-coverage --key go --value-file ./cover.out
      - run:
          name: Format coverage
          command: go tool cover -html=cover.out -o coverage.html
      - store_artifacts:
          path: coverage.html
      - store_test_results:
          path: results

  upload_github:
    docker:
      - image: 'cibuilds/github:0.10'
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: Publish Release on GitHub
          command: |
            TAG=$(cat ./artifacts/VERSION)
            echo "TAG: $TAG"
            cp ./artifacts/URLshortener ./URLshortener-amd64
            ghr -t ${GHAPITOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${TAG} ./URLshortener-amd64

  upload_docker:
    docker:
      - image: circleci/golang:1.13.4
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - setup_remote_docker
      - run:
          name: Build and push Release to Docker.io
          command: |
            TAG=$(cat ./artifacts/VERSION)
            echo "TAG: $TAG"
            cp ./artifacts/URLshortener .
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker image build -t slytomcat/urlshortener:latest .
            docker tag slytomcat/urlshortener:latest slytomcat/urlshortener:$TAG
            docker push slytomcat/urlshortener

workflows:
  version: 2.1
  build_test_upload:
    jobs:
      - build
      - test
      - upload_github:
          requires:
            - build
          filters:
            branches:
              only: master
      - upload_docker:
          requires:
            - build
          filters:
            branches:
              only: master
